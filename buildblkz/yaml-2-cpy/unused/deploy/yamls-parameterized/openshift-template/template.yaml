apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: stockapp-template
  generatename: ""
  namespace: ""
  selflink: ""
  uid: ""
  resourceversion: ""
  generation: 0
  creationtimestamp: "0001-01-01T00:00:00Z"
  deletiontimestamp: null
  deletiongraceperiodseconds: null
  labels: {}
  annotations: {}
  ownerreferences: []
  finalizers: []
  clustername: ""
  managedfields: []
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: backend
      name: backend
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8000
          port: 8000
          protocol: TCP
          targetPort: 8000
      selector:
        move2kube.konveyor.io/service: backend
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: frontend
      name: frontend
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-3000
          port: 3000
          protocol: TCP
          targetPort: 3000
      selector:
        move2kube.konveyor.io/service: frontend
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: log-service
      name: log-service
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: log-service
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: log-service
          name: log-service
        spec:
          containers:
            - image: quay.io/stockapp/log-service:latest
              imagePullPolicy: Always
              name: log-service
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8004
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: m
      name: m
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: m
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: m
          name: m
        spec:
          containers:
            - image: quay.io/stockapp/m:latest
              imagePullPolicy: Always
              name: m
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: net-10.9.0.0
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  move2kube.konveyor.io/network-net-10.9.0.0: "true"
      podSelector:
        matchLabels:
          move2kube.konveyor.io/network-net-10.9.0.0: "true"
      policyTypes:
        - Ingress
  - apiVersion: v1
    data:
      .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJxdWF5LmlvIjogewoJCQkiYXV0aCI6ICJaSGxzWVc1cWEyVnRjQ3R6ZEc5amEyRndjSE5sYm1jME5qZzZNRVZMUVVkSU5VeFNPRmswUVVkTFVsVTRTemRZU1ZZd1ZVdEVNekE1VFV3MFZqVk9PRk15VnpOWFJUVTVUVmRET0ZwVFJGZE5VVXBGVVZVMVZqWlJVQT09IgoJCX0KCX0KfQ==
    kind: Secret
    metadata:
      creationTimestamp: null
      name: quay-io-imagepullsecret
    type: kubernetes.io/dockerconfigjson
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: queue-service
      name: queue-service
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: queue-service
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: queue-service
          name: queue-service
        spec:
          containers:
            - image: quay.io/stockapp/queue-service:latest
              imagePullPolicy: Always
              name: queue-service
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: quote-server
      name: quote-server
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: quote-server
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: quote-server
          name: quote-server
        spec:
          containers:
            - image: quay.io/stockapp/quote-server:latest
              imagePullPolicy: Always
              name: quote-server
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8002
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: redis-cache
      name: redis-cache
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: redis-cache
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: redis-cache
          name: redis-cache
        spec:
          containers:
            - image: quay.io/stockapp/redis-cache:latest
              imagePullPolicy: Always
              name: redis-cache
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 6379
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: backend
      name: backend
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: backend
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: backend
          name: backend
        spec:
          containers:
            - image: quay.io/stockapp/backend:latest
              imagePullPolicy: Always
              name: backend
              ports:
                - containerPort: 8000
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: worker
      name: worker
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8003
          port: 8003
          protocol: TCP
          targetPort: 8003
      selector:
        move2kube.konveyor.io/service: worker
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: backend-api
      name: backend-api
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: backend-api
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: backend-api
          name: backend-api
        spec:
          containers:
            - image: quay.io/stockapp/backend-api:latest
              imagePullPolicy: Always
              name: backend-api
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8000
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: rabbitmq
      name: rabbitmq
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: rabbitmq
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: rabbitmq
          name: rabbitmq
        spec:
          containers:
            - image: rabbitmq:3.8.17-management-alpine
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - nc
                    - -z
                    - localhost
                    - "5672"
                failureThreshold: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: rabbitmq
              ports:
                - containerPort: 5672
                  protocol: TCP
                - containerPort: 15672
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: backend-api
      name: backend-api
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: port-8000
          port: 8000
          protocol: TCP
          targetPort: 8000
      selector:
        move2kube.konveyor.io/service: backend-api
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: m
      name: m
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: m
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: quote-server
      name: quote-server
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8002
          port: 8002
          protocol: TCP
          targetPort: 8002
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: quote-server
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: redis-cache
      name: redis-cache
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: port-6379
          port: 6379
          protocol: TCP
          targetPort: 6379
      selector:
        move2kube.konveyor.io/service: redis-cache
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: worker
      name: worker
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: worker
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: worker
          name: worker
        spec:
          containers:
            - image: quay.io/stockapp/worker:latest
              imagePullPolicy: Always
              name: worker
              ports:
                - containerPort: 8003
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: worker-service
      name: worker-service
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: worker-service
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/service: worker-service
          name: worker-service
        spec:
          containers:
            - image: quay.io/stockapp/worker-service:latest
              imagePullPolicy: Always
              name: worker-service
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8003
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: log-service
      name: log-service
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8004
          port: 8004
          protocol: TCP
          targetPort: 8004
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: log-service
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: mongo-db
      name: mongo-db
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: mongo-db
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: mongo-db
          name: mongo-db
        spec:
          containers:
            - image: quay.io/stockapp/mongo-db:latest
              imagePullPolicy: Always
              name: mongo-db
              ports:
                - containerPort: 27017
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: worker-service
      name: worker-service
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: port-8003
          port: 8003
          protocol: TCP
          targetPort: 8003
      selector:
        move2kube.konveyor.io/service: worker-service
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: frontend
      name: frontend
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: frontend
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: frontend
          name: frontend
        spec:
          containers:
            - image: quay.io/stockapp/frontend:latest
              imagePullPolicy: Always
              name: frontend
              ports:
                - containerPort: 3000
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: mongo-db
      name: mongo-db
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-27017
          port: 27017
          protocol: TCP
          targetPort: 27017
      selector:
        move2kube.konveyor.io/service: mongo-db
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: queue-service
      name: queue-service
    spec:
      internalTrafficPolicy: Cluster
      ports:
        - name: port-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        move2kube.konveyor.io/service: queue-service
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/network-net-10.9.0.0: "true"
        move2kube.konveyor.io/service: quote-cache
      name: quote-cache
    spec:
      progressDeadlineSeconds: 600
      replicas: ${{COMMON_REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          move2kube.konveyor.io/service: quote-cache
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            move2kube.konveyor.io/network-net-10.9.0.0: "true"
            move2kube.konveyor.io/service: quote-cache
          name: quote-cache
        spec:
          containers:
            - image: quay.io/stockapp/quote-cache:latest
              imagePullPolicy: Always
              name: quote-cache
              ports:
                - containerPort: 6379
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: quay-io-imagepullsecret
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: quote-cache
      name: quote-cache
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-6379
          port: 6379
          protocol: TCP
          targetPort: 6379
      selector:
        move2kube.konveyor.io/service: quote-cache
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        move2kube.konveyor.io/service: rabbitmq
      name: rabbitmq
    spec:
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      ports:
        - name: port-5672
          port: 5672
          protocol: TCP
          targetPort: 5672
        - name: port-15672
          port: 15672
          protocol: TCP
          targetPort: 15672
      selector:
        move2kube.konveyor.io/service: rabbitmq
      sessionAffinity: None
      type: NodePort
    status:
      loadBalancer: {}
parameters:
  - name: COMMON_REPLICAS
    value: "2"
